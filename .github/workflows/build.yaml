name: Build

on:
  push:
    tags: ["*"]
  workflow_dispatch:
    inputs:
      flatpak:
        description: 'build flatpak'
        required: false
        default: 'false'
      snap:
        description: 'build snap'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  release:
    needs: [ build-win-x64, build-switch, build-macos ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
    - name: Release and Upload Assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: ${{ github.ref_name }}
        generate_release_notes: true
        files: '*/*'
        body: |
          ![download](https://img.shields.io/github/downloads/${{ github.repository }}/${{ github.ref_name }}/total?label=Downloads)

  build-switch:
    runs-on: ubuntu-latest
    container:
      image: devkitpro/devkita64:20230622
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Build dependencies
      if: ${{ github.ref_name == 'switch-portlibs' }}
      run: |
        apt-get update
        apt-get upgrade -y patch fakeroot file zstd
        
        adduser --gecos '' --disabled-password builder
        echo 'builder ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/builder
        chown -R builder:builder $(pwd)/scripts/switch

        dkp-pacman --noconfirm -U scripts/switch/dkp-toolchain-vars-1.0.3-2-any.pkg.tar.zst
        su - builder -c "make -C $(pwd)/scripts/switch -j$(nproc)"
    - name: Update dependencies
      if: ${{ github.ref_name != 'switch-portlibs' }}
      run: |
        dkp-pacman --noconfirm -U https://github.com/${{ github.repository }}/releases/download/switch-portlibs/switch-libass-0.17.1-1-any.pkg.tar.zst
        dkp-pacman --noconfirm -U https://github.com/${{ github.repository }}/releases/download/switch-portlibs/switch-ffmpeg-4.4.4-1-any.pkg.tar.zst
        dkp-pacman --noconfirm -U https://github.com/${{ github.repository }}/releases/download/switch-portlibs/switch-libmpv-0.35.1-1-any.pkg.tar.zst
    - name: Set workspace permissions
      run: |
        chown $(id -u):$(id -g) -R "$GITHUB_WORKSPACE"
        git config --system --add safe.directory '*'
    - name: Build nro
      run: |
        cmake -B switch -DPLATFORM_SWITCH=ON
        make -C switch Switchfin.nro -j$(nproc)
        cmake -E tar c Switchfin-NintendoSwitch.zip switch/Switchfin.nro
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switch-${{ github.ref_name }}
        path: Switchfin-NintendoSwitch.zip
    - name: Upload dependencies
      uses: softprops/action-gh-release@v1
      if: ${{ github.ref_name == 'switch-portlibs' }}
      with:
        tag_name: switch-portlibs
        prerelease: true
        files: scripts/switch/*/*.pkg.tar.zst
        body: |
          ![download](https://img.shields.io/github/downloads/${{ github.repository }}/switch-portlibs/total?label=Downloads)

  build-snap:
    if: github.event.inputs.snap == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Update gamepad mappings
      run: |
        BRLS_GLFW="library/borealis/library/lib/extern/glfw"
        cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
    - name: Build snap
      run: |
        docker run --rm --tty -v $PWD:/data -w /data/scripts --privileged diddledani/snapcraft:core20
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: snap-${{ github.ref_name }}
        path: scripts/*.snap

  build-flatpak:
    if: github.event.inputs.flatpak == 'true'
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-22.08
      options: --privileged
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Update gamepad mappings
      run: |
        dnf -y install cmake
        BRLS_GLFW="library/borealis/library/lib/extern/glfw"
        cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
    - name: Build flatpak
      uses: flatpak/flatpak-github-actions/flatpak-builder@v6.1
      with:
        bundle: switchfin-Linux-${{ github.ref_name }}.flatpak
        manifest-path: scripts/flatpak.yaml
        cache-key: flatpak-builder-${{ github.ref_name }}

  build-macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install deps
      run: |
        brew install create-dmg dylibbundler boost
        brew tap xfangfang/wiliwili
        brew install -v mpv-wiliwili
    - name: Update gamepad mappings
      run: |
        BRLS_GLFW="library/borealis/library/lib/extern/glfw"
        cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
    - name: Build App
      run: |
        cmake -B build -DPLATFORM_DESKTOP=ON -DUSE_BOOST_FILESYSTEM=ON -DCMAKE_BUILD_TYPE=Release
        make -C build -j$(sysctl -n hw.ncpu)
    - name: Create DMG
      run: |
        mkdir -p dist
        mv build/Switchfin.app dist/
        cp README.md dist
        create-dmg --window-pos 200 120 --window-size 800 400 \
          --icon-size 100 --icon "Switchfin.app" 200 190 \
          --icon "README.md" 400 100 --hide-extension "Switchfin.app" \
          --app-drop-link 600 185 --volicon ./scripts/dmg.icns \
          --volname "Switchfin" Switchfin-macOS.dmg "dist/"
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: macos-${{ github.ref_name }}
        path: Switchfin-*.dmg

  build-win-x64:
    runs-on: windows-2022
    steps:
    - name: Setup Windows 10 SDK
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
      with:
        sdk-version: 19041
    - name: Install xmake
      shell: powershell
      run: |
        Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Cache xmake packages
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-build
        path: |
          ${{ runner.temp }}/.xmake/packages
    - name: Build
      shell: powershell
      run: |
        $env:path+=";$env:USERPROFILE\xmake"
        $env:XMAKE_GLOBALDIR="${{ runner.temp }}"
        xmake config -c -y
        xmake build -y
        cd build\windows\x64\release
        7z a "$env:GITHUB_WORKSPACE\Switchfin-Win64.zip" *
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: windows-${{ github.ref_name }}
        path: Switchfin-Win64.zip
