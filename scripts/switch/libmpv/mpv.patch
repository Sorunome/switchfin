diff --git a/osdep/io.c b/osdep/io.c
index d4dcfc6..12fb384 100644
--- a/osdep/io.c
+++ b/osdep/io.c
@@ -61,7 +61,7 @@ bool mp_set_cloexec(int fd)
     return true;
 }
 
-#ifdef __MINGW32__
+#if defined(__MINGW32__) || defined(__SWITCH__)
 int mp_make_cloexec_pipe(int pipes[2])
 {
     pipes[0] = pipes[1] = -1;
@@ -81,7 +81,7 @@ int mp_make_cloexec_pipe(int pipes[2])
 }
 #endif
 
-#ifdef __MINGW32__
+#if defined(__MINGW32__) || defined(__SWITCH__)
 int mp_make_wakeup_pipe(int pipes[2])
 {
     return mp_make_cloexec_pipe(pipes);
diff --git a/osdep/switch/sys/mman.h b/osdep/switch/sys/mman.h
new file mode 100644
index 0000000..ce75000
--- /dev/null
+++ b/osdep/switch/sys/mman.h
@@ -0,0 +1,31 @@
+#ifndef _MEMMAP_H_
+#define _MEMMAP_H_
+
+#include <stdio.h>
+#include <stdint.h>
+#include <stdlib.h>
+
+#define PROT_READ       0x1
+#define PROT_WRITE      0x2
+#define MAP_SHARED      0x01
+#define MAP_FAILED      ((void *) -1)
+
+// #define mmap(a, b, c, d, e, f) malloc(b)
+// #define munmap(a, b) free(a)
+
+static inline void *mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)
+{
+    printf("mmap: %p, %ld\n", addr, len);
+    
+    return malloc(len);
+}
+
+static inline int munmap(void *addr, size_t len)
+{
+    printf("munmap: %ld\n", len);
+
+    free(addr);
+    return 0;
+}
+
+#endif
diff --git a/sub/filter_regex.c b/sub/filter_regex.c
index 8e29991..c7b08f5 100644
--- a/sub/filter_regex.c
+++ b/sub/filter_regex.c
@@ -1,5 +1,5 @@
-#include <regex.h>
 #include <sys/types.h>
+#include <regex.h>
 
 #include "common/common.h"
 #include "common/msg.h"
diff --git a/wscript_build.py b/wscript_build.py
index 384bb50..e0e28ee 100644
--- a/wscript_build.py
+++ b/wscript_build.py
@@ -191,7 +191,6 @@ def build(ctx):
         ])
 
     getch2_c = ctx.pick_first_matching_dep([
-        ( "osdep/terminal-unix.c",               "posix" ),
         ( "osdep/terminal-win.c",                "win32-desktop" ),
         ( "osdep/terminal-dummy.c" ),
     ])
@@ -203,13 +202,11 @@ def build(ctx):
     ])
 
     ipc_c = ctx.pick_first_matching_dep([
-        ( "input/ipc-unix.c",                    "posix" ),
         ( "input/ipc-win.c",                     "win32-desktop" ),
         ( "input/ipc-dummy.c" ),
     ])
 
     subprocess_c = ctx.pick_first_matching_dep([
-        ( "osdep/subprocess-posix.c",            "posix" ),
         ( "osdep/subprocess-win.c",              "win32-desktop" ),
         ( "osdep/subprocess-dummy.c" ),
     ])
